<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_base_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_entity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Inherit event
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Runtime variables

// Attack, spell, dodge
pointer_direction = 0;
active_equipment = noone;

// Player animation 
weapon_img_index = 0;
weapon_img_number = 0;
spell_img_index = 0;
spell_img_number = 0;
dodge_img_index = 0;

// Player animation
bob_amount = 0;
footstep_sound_played = false;

// UI variables
weapon_icon_index = 0;
show_weapon = true;
weapon_icon_index = 0;
show_spell = true;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player sprite variables

head = spr_player_head;

body_img_speed = 36;
body[RIGHT] = spr_base_right;
body[UP] = spr_base_down;
body[LEFT] = spr_base_left;
body[DOWN] = spr_base_down;

shadow = spr_shadow_small;

body_bob_height = 1;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player stats
scr_get_equipment_mapping();

team = 1;
hp = 5;
max_hp = hp;
max_mana = 5;
mana = 2.6;
mana_restore_rate = .15;
move_speed = 100;
move = scr_move_state;

combo_time = 0.3;

// Active items
scr_init_equipment_slot(0);
scr_init_equipment_slot(1);
scr_init_equipment_slot(2);
scr_init_equipment_slot(3);

dodge = scr_roll;
//equipment[0] = scr_roll;
script_execute(dodge, true);

scr_weapon_spear(1, true);
//equipment[1] = scr_weapon_spear;

scr_spell_fire(2, true);
//equipment[2] = scr_spell_fire;

//special = scr_spell_groundbeam;
//equipment[3] = scr_spell_groundbeam;


// Runtime variables
state = scr_move_state;
dir = 270;
attack_direction = 270;
head_direction = 0;
face = 3;
move_percentage = 0;
move_speed_modifier = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Control the logic
scr_frame_time();
script_execute(state);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update Sprite
var _total_move_speed = point_distance(0, 0, total_move_h, total_move_v);
var _move_speed_percentage = _total_move_speed / 100;

sprite_index = body[face];
image_speed = (body_img_speed/room_speed)*_move_speed_percentage*global.game_speed;

depth = -y;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stat update (Restore mana)
scr_frame_time();

mana += mana_restore_rate * frame_time;

if (mana &gt; max_mana) {
  mana = max_mana;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw debug text

if (global.debug == false) { exit; }

draw_set_font(fnt_main);
draw_set_halign(fa_left);
draw_text(20, 20, 'head_direction '+string(head_direction));
draw_text(20, 40, 'pointer_direction '+string(pointer_direction));
draw_text(20, 60, 'global.controller_id '+string(global.controller_id));

draw_text(220, 20, 'total_move_h '+string(total_move_h));
draw_text(220, 40, 'total_move_v '+string(total_move_v));
var total_speed = point_distance(0, 0, total_move_h, total_move_v);
draw_text(220, 60, 'total_speed '+string(total_speed));

draw_text(220, 80, 'max_speed '+string(max_speed));
draw_text(220, 100, 'len '+string(len));
draw_text(220, 120, 'move_cap '+string(move_cap));

draw_text(420, 20, 'state '+string(state));
draw_text(420, 40, 'dash_key '+string(dash_key));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the player

// SHADOWS
shader_set(shd_shadow);

// Equipment shadow
for (var i = 0; i &lt; array_height_2d(equipment); i++) {
  if (equipment[i, _eq_script]) {
    draw_sprite_ext(
      equipment[i, _eq_sprite], equipment[i, _eq_image_index], x, y,
      1, 1, attack_direction, c_white, 1
    );
  }
}

// Body
shader_reset();
draw_sprite(shadow, 0, x, y);

if (invinc_timer &gt; 0) {
  shader_set(shd_white);
}

if (state == dodge) {
  draw_sprite(dodge_sprite[face], dodge_img_index, x, y);
  exit;
}

var body_bob = bob_amount * body_bob_height;

// Body
draw_sprite(sprite_index, image_index, x, y - body_bob);

// Equipment
for (var i = 0; i &lt; array_height_2d(equipment); i++) {
  if (equipment[i, _eq_script]) {
    var _y = y - equipment[i, _eq_height] - body_bob;
    draw_sprite_ext(
      equipment[i, _eq_sprite], equipment[i, _eq_image_index], x, _y,
      1, 1, attack_direction, image_blend, 1
    );
  }
}

// Head
draw_sprite(head, head_direction, x, y - body_bob);

shader_reset();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scr_draw_healthbar</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
