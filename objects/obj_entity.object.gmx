<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Entity variables
hp = 1;
max_hp = hp;
invinc_time = .2;
stun_time_modifier = 1;

// Runtime variables
move_h = 0;
move_v = 0;
kb_h = 0
kb_v = 0;
total_move_h = 0;
total_move_v = 0;
move_cap = 100;
acceleration = 800;
max_speed = 250;
damp_amount = 500;
team = 0;
invinc_timer = .02;
stun_timer = 0;
stun_time = 0;
len = 0;
dir = 0;
hit_pause = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement
scr_frame_time();

var _damp_amount = damp_amount;

// Calculates movement

// Counteracts damping for movement
var _move_amount = len * acceleration + (sign(len) * _damp_amount); // 300
var _total_speed = point_distance(0, 0, total_move_h, total_move_v); // 50

if (_total_speed &gt; move_cap) {
  _move_amount = 0;
}

var _move_h = lengthdir_x(_move_amount, dir);
var _move_v = lengthdir_y(_move_amount, dir);

total_move_h += (_move_h + kb_h) * frame_time;
total_move_v += (_move_v + kb_v) * frame_time;

// Damping gets applied based on direction
var _total_dir = point_direction(0, 0, total_move_h, total_move_v);
var _total_speed = point_distance(0, 0, total_move_h, total_move_v);

damp_h = lengthdir_x(1, _total_dir) * _damp_amount * frame_time;
damp_v = lengthdir_y(1, _total_dir) * _damp_amount * frame_time;

if (abs(total_move_h) &lt; abs(damp_h)) { damp_h = total_move_h; }
if (abs(total_move_v) &lt; abs(damp_v)) { damp_v = total_move_v; }

total_move_h -= damp_h;
total_move_v -= damp_v;

// Limit the speed
if (_total_speed &gt; max_speed) {
  total_move_h = lengthdir_x(max_speed, _total_dir);
  total_move_v = lengthdir_y(max_speed, _total_dir);
}

scr_move_entity(total_move_h, total_move_v);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update timers

if (invinc_timer &gt; 0) {
  invinc_timer -= frame_time;
  invinc_timer = max(0, invinc_timer);
}
if (stun_timer &gt; 0) {
  stun_timer -= frame_time;
  stun_timer = max(0, stun_timer);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_entity">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Push back entity from each other
scr_frame_time();

var _dir = point_direction(x, y, other.x, other.y);
var _total_move_speed = point_distance(0, 0, total_move_h, total_move_v);
var _push_amount = (_total_move_speed + damp_amount) * frame_time;

with (other) {
  scr_apply_force(_push_amount, _dir);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw entity

if (invinc_timer &gt; 0) {
  shader_set(shd_white);
}

draw_self();

shader_reset();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scr_draw_healthbar</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
