<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Get player reference and set current menu
current_menu = scr_menu_game;
player = obj_player;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize UI variables
scr_update_ui_variables();

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Runtime Menu variables
menu_navigation_timer = 0;
bg_fade_amount = 1;
menu_position = 0;

// Colors
unselected_color = $c0c0c0;
selected_color = $ffffff;

// Window
game_speed_before_game_minimised = 1;

/*
// Menu actions
menu_action[PAUSE, 0] = scr_resume_game;
menu_action[PAUSE, 1] = scr_open_options;
menu_action[PAUSE, 2] = scr_exit_to_menu;

menu_action[OPTIONS_GFX, 0] = scr_toggle_fullscreen;
menu_action[OPTIONS_GFX, 1] = scr_next_resolution;
menu_action[OPTIONS_GFX, 2] = scr_next_fps_cap;
menu_action[OPTIONS_GFX, 3] = scr_apply_gfx_options;

// Item count for each menu
menu_item_count[0] = 0;
menu_item_count[1] = 3;
menu_item_count[2] = 4;

// Menu values
// used in options menu
menu_value[PAUSE, 0] = '';
menu_value[PAUSE, 1] = '';
menu_value[PAUSE, 2] = '';

menu_value[OPTIONS_GFX, 0] = !!window_get_fullscreen(); // fullscreen
menu_value[OPTIONS_GFX, 1] = 1; // resolution
menu_value[OPTIONS_GFX, 2] = 5; // fps cap
menu_value[OPTIONS_GFX, 3] = -1; // apply button

menu_value[OPTIONS_SFX, 0] = 1; // Master volume
menu_value[OPTIONS_SFX, 1] = 1; // SFX volume
menu_value[OPTIONS_SFX, 2] = 1; // Ambient volume

menu_value[OPTIONS_CTRLS, 0] = true; // Gamepad enabled
menu_value[OPTIONS_CTRLS, 1] = ''; // Controller deadzone
menu_value[OPTIONS_CTRLS, 2] = ''; */
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Settings
camera_speed = 10; // Percent per second
menu_navigation_rate = 5;
bg_fade_speed = 4; // fraction of second
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set display settings

var _w = 640;
var _h = 360;
window_set_size(_w, _h);
global.center_window = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Resize application surface
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Center the game window

if (global.center_window) {
  global.center_window = false;
  window_center();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update global input variables

// Check if mouse has been moved
var current_mouse_x = window_mouse_get_x();
var current_mouse_y = window_mouse_get_y();
if (last_mouse_x == current_mouse_x &amp;&amp;
    last_mouse_y == current_mouse_y) {
  global.mouse_moved = false;
} else {
  global.mouse_moved = true;
}
last_mouse_x = current_mouse_x;
last_mouse_y = current_mouse_y;

// Lock mouse in game window
if (window_get_fullscreen()) {
  window_mouse_set(
    clamp(window_mouse_get_x(),0,window_get_width()),
    clamp(window_mouse_get_y(),0,window_get_height())
  );
}

// Check if gamepad is connected
global.controller_id = -1;
for (var i = 0; i &lt; 12; i++) {
  if (gamepad_is_connected(i)) {
    global.controller_id = i;
  }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handle camera movement

scr_frame_time();
view_x = view_xview[0];
view_y = view_yview[0];
view_w = view_wview[0];
view_h = view_hview[0];

cam_move_x = (player.x - (view_w/2)) - view_x;
cam_move_y = (player.y - (view_h/2)) - view_y;

view_xview[0] += cam_move_x * camera_speed * frame_time;
view_yview[0] += cam_move_y * camera_speed * frame_time;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update variables if window size has changed

var w = window_get_width();
var h = window_get_height();

if (w != width || h != height) {
  scr_update_ui_variables();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Execute menu script and update bg fade
scr_get_input();
script_execute(current_menu, false);

// Control background fade
scr_frame_time_independant();
fade_dir = 0;
if (current_menu != scr_menu_game) {
  fade_dir = 1;
} else {
  fade_dir = -1;
}

bg_fade_amount += fade_dir * bg_fade_speed * frame_time_indep;
bg_fade_amount = clamp(bg_fade_amount, 0, 1);

//menu_index = controller.menu_index;
//current_menu = menu_items[menu_index];
//menu_item_count = sprite_get_number(current_menu)
//menu_position = controller.menu_position;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update hit pause
scr_frame_time_independant()

var _hit_pause_timer = global.hit_pause_timer;

if (_hit_pause_timer &gt; 0) {
  global.game_speed = 0;
  
  _hit_pause_timer -= frame_time_indep;
  _hit_pause_timer = max(_hit_pause_timer, 0);
  
  global.hit_pause_timer = _hit_pause_timer;
} else if (!global.game_paused) {
  global.game_speed = 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Pause game if window is not focused

if (os_is_paused() &amp;&amp; current_menu == scr_menu_game) {
  scr_to_pause();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update room settings

if (room_speed != global.fps_cap) {
  room_speed = global.fps_cap;
}

// Safety measure, so when room loads, it initializes
// input variables based on mouse
global.mouse_moved = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set mouse cursor

cursor_sprite = spr_cursor;
window_set_cursor(cr_none);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Global Game Settings and runtime variables

global.debug = false;

// Game variables
global.game_speed = 1;
global.controller_id = -1;
global.mouse_moved = true;
last_mouse_x = window_mouse_get_x();
last_mouse_y = window_mouse_get_y();

// Settings
global.fps_cap = 250;
global.deadzone = 0.3;

// Runtime
global.center_window = false;
global.game_paused = false;
global.hit_pause_timer = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw debug text

if (global.debug == true) {
  draw_text(20, 100, 'current_menu'+string(current_menu));
  draw_text(20, 120, 'menu_position'+string(menu_position));
  draw_text(20, 140, 'width'+string(width));
  draw_text(20, 160, 'height'+string(height));
  
  draw_text(20, 190, 'x'+string(view_xview[0]));
  draw_text(20, 210, 'y'+string(view_yview[0]));
  draw_text(20, 230, 'w'+string(view_wview[0]));
  draw_text(20, 250, 'h'+string(view_hview[0]));
  draw_text(20, 270, 'fade_dir'+string(fade_dir));
  draw_text(20, 290, 'room_speed'+string(room_speed));
  draw_text(20, 310, 'game_speed'+string(global.game_speed));
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Paused menu

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Graphics menu
/* draw graphics menu
if (controller.menu_index != 2) { exit; }

// Draw all menu items;
for (var i = 0; i &lt; menu_item_count; i++) {
  var color = unselected_color;
  var item_value = controller.menu_value[menu_index, i];
  var item_y = options_item_start + (options_item_offset * i);
  
  // Change color and draw underline for selected item
  if (menu_position == i) { 
    color = selected_color;
    draw_sprite_ext(
      spr_graphics_selection, 0,
      center_x, item_y,
      scale_x, scale_y, 0, 
      color, bg_fade_amount
    );
  }
  
  // Draw menu item
  draw_sprite_ext(
    current_menu, i,
    center_x, item_y,
    scale_x, scale_y, 0, 
    color, bg_fade_amount
  );
  
  if (item_value &gt; -1) {
    script_execute(controller.menu_action[menu_index, i], true, false);
    // Draw option sprite
    draw_sprite_ext(
      option_sprite, option_index,
      center_x + (73 * scale_x), item_y,
      scale_x, scale_y, 0, 
      color, bg_fade_amount
    );
  }
}
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handle menus
draw_sprite_ext(spr_menu_bg, 0, 0, 0, width, height, 0, c_white, bg_fade_amount);
script_execute(current_menu, true);

/* drawing menu logic
if (menu_index) {
  // Draw header
  draw_sprite_ext(menu_headers, menu_index, center_x, header_y,
    scale_x, scale_y, 0, c_white, bg_fade_amount);
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
